direction: right

# Core Components
core: {
  # Group all models together in a grid layout
  models: Models {
    shape: package
    style.multiple: true
    grid-columns: 3

    # Base models in first column
    base: {
      shape: package
      UnifiBaseModel
      ValidationMixin
      NetworkMixin
      BaseResponse
    }

    # Device and wireless models in second column
    operational: {
      shape: package

      device: {
        Device
        Client
        PortStats
        WifiStats
      }

      wireless: {
        WifiMixin
        NetworkProfile
        RadioSettings
        WLANConfiguration
      }
    }

    # Configuration and status models in third column
    config: {
      shape: package

      network: {
        DHCPConfiguration
        VLANConfiguration
        NetworkConfiguration
      }

      system: {
        SystemHealth
        ProcessInfo
        ServiceStatus
        SystemStatus
      }
    }
  }

  # API Clients
  clients: Clients {
    shape: package
    style.multiple: true

    BaseClient: {
      shape: class

      retry: Retry Mechanism {
        shape: class
      }
      errors: Error Handling {
        shape: class
      }
      validation: Response Validation {
        shape: class
      }
    }

    UnifiClient: {
      shape: class
      style.stroke-dash: 5

      device: Device Management {
        shape: class
        style.stroke-dash: 5
      }
      wireless: Wireless Settings {
        shape: class
        style.stroke-dash: 5
      }
      network: Network Settings {
        shape: class
        style.stroke-dash: 5
      }
      system: System Status {
        shape: class
        style.stroke-dash: 5
      }
    }

    # Show inheritance relationship
    BaseClient <- UnifiClient: inherits
  }

  # Recommendation Engine
  checks: Checks {
    shape: package
    style.multiple: true
    style.stroke-dash: 5

    AppleRecommendationCheck: {
      shape: class
      style.stroke-dash: 5
    }
  }
}

# Development and CLI Tools
tools: {
  shape: package

  scripts.fetch_api_responses: {
    shape: rectangle
    label: "fetch_api_responses.py\n(Development Tool)"
  }

  scripts.future_cli: {
    shape: rectangle
    style.stroke-dash: 5
    label: "CLI Tool\n(Planned)"
  }
}

# External Systems
external: {
  api: UniFi Network API {
    shape: cloud
  }

  docs: Documentation {
    api_responses: {
      shape: cylinder
      label: "API Response\nExamples"
    }
  }
}

# Connections
# Model usage
core.models.base -> core.clients.BaseClient.validation: "Used for validation"
core.models -> core.clients.UnifiClient: "Used for data"
core.models -> core.checks.AppleRecommendationCheck: "Used for validation"

# API interactions
core.clients.UnifiClient -> external.api: "HTTP requests"
external.api -> core.clients.UnifiClient: "JSON responses"

# Development tools
tools.scripts.fetch_api_responses -> core.clients.BaseClient: "Uses for HTTP"
tools.scripts.fetch_api_responses -> external.api: "Fetches from"
tools.scripts.fetch_api_responses -> external.docs.api_responses: "Saves to"

# Future interactions
tools.scripts.future_cli -> core.clients.UnifiClient: "Will use"

# Legend
legend: {
  grid-columns: 2
  Implemented: {
    shape: package
  }
  "In Progress": {
    shape: package
    style.stroke-dash: 5
  }
}
